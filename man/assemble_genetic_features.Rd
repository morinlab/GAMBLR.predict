% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/umap.R
\name{assemble_genetic_features}
\alias{assemble_genetic_features}
\title{Assemble genetic features for UMAP input}
\usage{
assemble_genetic_features(
  these_samples_metadata,
  metadata_columns = c("bcl2_ba", "bcl6_ba", "myc_ba"),
  genes,
  synon_genes,
  maf_with_synon,
  hotspot_genes,
  genome_build = "grch37",
  sv_value = 3,
  synon_value = 1,
  coding_value = 2,
  include_ashm = TRUE,
  annotated_sv,
  include_GAMBL_sv = TRUE,
  review_hotspots = TRUE,
  verbose = FALSE
)
}
\arguments{
\item{these_samples_metadata}{Data frame with sample metadata, must include seq_type and sample_id.}

\item{metadata_columns}{Columns in metadata to use for SV status (default: c("bcl2_ba","bcl6_ba","myc_ba")).}

\item{genes}{Vector of gene symbols to include.}

\item{synon_genes}{Vector of gene symbols for synonymous mutations.}

\item{maf_with_synon}{MAF data frame including synonymous mutations.}

\item{hotspot_genes}{Vector of hotspot genes.}

\item{genome_build}{Genome build version (default: "grch37").}

\item{sv_value}{Value to assign for SV presence (default: 3).}

\item{synon_value}{Value to assign for synonymous mutations (default: 1).}

\item{coding_value}{Value to assign for coding mutations (default: 2).}

\item{include_ashm}{Logical; if TRUE, includes aSHM counts in the output matrix (default: TRUE).}

\item{annotated_sv}{Data frame with annotated structural variants.}

\item{include_GAMBL_sv}{Logical; if TRUE, includes GAMBL structural variants in the output matrix (default: TRUE).}

\item{review_hotspots}{Logical; if TRUE, reviews hotspot genes (default: TRUE).}

\item{verbose}{Defaults to FALSE}
}
\value{
Matrix of assembled features for each sample.
}
\description{
This function assembles a matrix of genetic features for each sample, including mutation status,
aSHM counts, and structural variant status for BCL2, BCL6, and MYC. It supports both genome and capture sequencing types.
}
\examples{

\dontrun{
library(GAMBLR.predict)

ordered_genes = filter(lymphoma_genes,DLBCL_Tier==1 | FL_Tier==1|BL_Tier==1)  \%>\% pull(Gene)
synon_genes = unique(grch37_ashm_regions$gene)
synon_genes = synon_genes[synon_genes \%in\% ordered_genes]

all_sv_anno = get_combined_sv(these_samples_metadata = dlbcl_meta)

all_sv_anno = annotate_sv(all_sv_anno)

all_full_status = assemble_genetic_features(
  these_samples_metadata = dlbcl_meta,
  metadata_columns = c("BCL2_SV","BCL6_SV"),
  synon_genes = synon_genes,
  synon_value = 1,
  coding_value = 2,
  genes = ordered_genes,
  hotspot_genes = c("MYD88"),
  maf_with_synon = all_maf_with_s,
  include_ashm = F,
  sv_value = 2,
  verbose=F,
  annotated_sv = all_sv_anno
)
}
 
}
