% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/umap.R
\name{weighted_knn_predict_with_conf}
\alias{weighted_knn_predict_with_conf}
\title{Weighted k-nearest neighbor with confidence estimate}
\usage{
weighted_knn_predict_with_conf(
  train_coords,
  train_labels,
  test_coords,
  k,
  epsilon = 0.1,
  conf_threshold = NULL,
  other_class = "Other",
  verbose = FALSE,
  use_weights = TRUE,
  ignore_self = TRUE,
  track_neighbors = TRUE,
  separate_other = TRUE,
  max_neighbors = 500
)
}
\arguments{
\item{train_coords}{Data frame of coordinates for labeled (training) samples.
One row per sample, columns are features (typically UMAP V1, V2).}

\item{train_labels}{Character/factor vector of labels for training samples.}

\item{test_coords}{Data frame of coordinates for samples to classify
(same columns/space as train_coords).}

\item{k}{Integer; number of neighbors to consider.}

\item{epsilon}{Numeric; small value added to distances before weighting
(when use_weights = TRUE). Default: 0.1.}

\item{conf_threshold}{Optional numeric; minimum confidence for assigning a
class. If provided and confidence < threshold, sample is assigned
\code{other_class}.}

\item{other_class}{Name of the outgroup class to treat specially when
\code{separate_other = TRUE}. Default: "Other".}

\item{verbose}{Logical; print verbose info. Default: FALSE.}

\item{use_weights}{Logical; inverse-distance weights (1 / (d + epsilon)).
If FALSE, neighbors contribute equally. Default: TRUE.}

\item{ignore_self}{Logical; drop a zero-distance self-neighbor. Default: TRUE.}

\item{track_neighbors}{Logical; append neighbor diagnostics to output.
Default: TRUE.}

\item{separate_other}{Logical; when TRUE, exclude neighbors labeled
\code{other_class} from the main weighted vote and report their
influence separately (as \code{other_*} columns). Default: TRUE.}

\item{max_neighbors}{Integer; maximum neighbors to retrieve from the
search index before trimming to k. Default: 500.}
}
\value{
Data frame with rows = test samples and columns:
\item{predicted_label}{the predicted class}
\item{confidence}{predicted class weight / total weight}
If \code{track_neighbors = TRUE}, additional columns:
\item{other_score}{relative weight of outgroup vs predicted class}
\item{neighbor_id}{comma-separated neighbor sample IDs}
\item{neighbor}{comma-separated neighbor indices (in train order)}
\item{distance}{comma-separated neighbor distances}
\item{label}{comma-separated neighbor labels (in-group only if separate_other=TRUE)}
\item{vote_labels}{comma-separated unique labels contributing to weights}
\item{weighted_votes}{comma-separated weights per \code{vote_labels}}
\item{neighbors_other}{count of outgroup neighbors closer than the farthest in-group neighbor}
\item{other_weighted_votes}{sum of outgroup weights closer than the farthest in-group neighbor}
\item{total_w}{sum of weights for in-group neighbors used}
\item{pred_w}{weight supporting the predicted class}
}
\description{
Weighted k-nearest neighbor with confidence estimate
}
